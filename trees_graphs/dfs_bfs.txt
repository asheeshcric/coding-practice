def visit(node):
    pass


def DFS(root):
    # Pseudo code
    if root is None:
        return
    visit(root)
    root.visited = True
    for node in root.adjacent:
        if node.visited is False:
            DFS(node)


def BFS(root):
    # Just a pseudo code
    queue = Queue()
    root.marked = True
    queue.enqueue(root)

    while not queue.is_empty():
        r = queue.dequeue()
        visit(r)
        for node in r.adjacent:
            if node.marked is False:
                node.marked = True
                queue.enqueue(node)


# NOTE: Bidirectional search is used to find the shortest path between two nodes (apply BFS on both nodes)
